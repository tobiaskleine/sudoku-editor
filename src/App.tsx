import React, {useState} from 'react';
import logo from './logo.svg';
import './App.css';
import SudokuGrid, {ShowHint} from './components/SudokuGrid/SudokuGrid';
import Sudoku from "./models/Sudoku";
import SudokuFactory from "./models/SudokuFactory";
import DirectSolver from "./models/solver/DirectSolver";
import UniqueSolver from "./models/solver/UniqueSolver";
import SudokuAny from "./models/SudokuAny";

function App() {
    const sudoku1str = '000280000\n004100008\n083000200\n030000700\n200518009\n005000040\n009000620\n700005400\n000061000'
    const sudoku2str = '000429000\n001000400\n050000030\n900060007\n700102004\n600090008\n080000050\n004000700\n000283000'
    const sudoku3str = '006009007\n530200000\n000300020\n907040000\n001003280\n000000070\n000050900\n000000000\n009010630'
    const sudoku4str = '001500000\n702000506\n300700000\n420000900\n100000004\n000006000\n000040050\n040000830\n900021000'
    const sudoku5str = '070000804\n005000900\n001004002\n000050001\n040829070\n900030000\n300200700\n009000100\n607000050'
    const sudoku6str = '000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000'
    const sudoku7str = '190007000\n805020000\n000000060\n000048901\n001070400\n708510000\n030000000\n000050103\n000400052'

    const sudoku10str = '0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000\n0000000000000000000000000'
    const sudoku11str = '000E000J0800000000M5276BF\n00000E037IJ00NP0000000000\n005I00PL0B9E73A0000K00000\n007000000G00000600DH01C50\n0190L0000O00C0K2G0N300000\n8L0000KH0007300N140J0G000\n000070L0000PBK90H000A00EC\n00000940MJ00AC00P0LE0O000\nG3E500D000000F008000LPNK0\nOKH090F020008040A00000003\nN00J08G040DF000006307000A\n4IG10A0COP000000020060000\n000A20003040000F0I00OLBCN\n000007000000000CB5O0DE400\n00000M01N032LP090JK0G0000\nE0D0C0J00M140OH3000000F00\n000LH00PK4N000MD0002J3006\n3OB250000L0G090000000CIHP\n000PFC00020B0700K1JN00500\n00000G6N80000050L0090010O\nD7000000000MP0002N00080F4\n0000800A00CN0JEH50PG00000\n04000100F36OH0000B00000M0\n20PFJ50O0C0I1B0L000000HA7\nBH1NO00000G0F00790060000E'
    const sudoku12str = '10J8000KAN000E0764P030D0O\n000H0000P3JFO000100E00400\nAL00680010002G3HD0050000M\n000ME0070200C10NL0300I0JH\n40002H0000NDA0KFM08016500\n0JA000M0060O3200F9E0G0800\nI005MEO0K04009000DL700000\nG0000FAP00HE07L8C1000D003\nP3CFBN0I000M000000O000E47\nO0KE7001090000NM000I0B0PL\n0020A00N0PG100D00E70J00H0\nH0M60K820000P0E0BL03D00N0\n09OPJA0000030L000002F1IM0\n0G00DL03H02080000K6F0790B\n070080FE00900AIC0M0040P00\n7A0I06000GK0000O0300HE10P\nMK9000H0000005000I082L63A\nN00G000AEOD70C10065J00004\n00000PD5000I0020K0M18F00N\n0030F0ILM006EN0P00H000C90\n00H2N0G0LIE05DJ000097000C\nFP0O00K04802100E0N00I9000\nJ0000100NAO94000I00ML008F\n00100O0030007I8BH00004000\n50I0302HCB0N000187000PJ06'
    
    const solverDirect = new DirectSolver()
    const uniqueSolver = new UniqueSolver()

    const [sd, setSd] = useState(SudokuFactory.readFromString(sudoku2str))
    const [sdOld, setSdOld] = useState(SudokuFactory.readFromString(sudoku2str))
    
    const showHints: SudokuAny<ShowHint> = sd.mapSudoku((v, i, j, sd) => {
        return {
            isNew: v !== null && sdOld.getValue(i, j) === null
        }
    })
    
    return (
        <div className="App">
            <header className="App-header">
            </header>
            <div>
                <SudokuGrid sudoku={sd} showHints={showHints} />
                <button onClick={() => {
                    setSdOld(sd)
                    setSd(solverDirect.solve(sd))
                }}>Solve (direct)</button>
                <button onClick={() => {
                    setSdOld(sd)
                    setSd(uniqueSolver.solve(sd))
                }}>Solve (unique)</button>
            </div>
        </div>
    );
}

export default App;
